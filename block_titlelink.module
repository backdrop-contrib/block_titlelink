<?php // $Id$

/**
 * @file module for adding a link to a block title
*/

// Variable Table Prefex
define('BLOCK_TITLELINK_VARIABLE_PREFIX', 'block_titlelink_');

/**
 * Implementation of hook_form_alter
*/
function block_titlelink_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'block_admin_configure') {
    $block = new stdClass();
    $block->module = $form['module']['#value'];
    $block->delta = $form['delta']['#value'];
		$titlelink_data = _block_titlelink_get_data($block);
		$url = (isset($titlelink_data['url'])) ? $titlelink_data['url'] : NULL;
		$display_link = (isset($titlelink_data['display'])) ? $titlelink_data['display'] : TRUE;
    //Define Titlelink form elements
    $form['settings']['block_titlelink'] = array(
      '#type' => 'fieldset',
      '#title' => t('Block Title Link Settings'),
      '#collapsible' => TRUE,
      '#weight' => 0,
    );
    $form['settings']['block_titlelink']['title_link'] = array(
      '#type' => 'textfield',
      '#title' => t('Title Path'),
      '#default_value' => $url,
      '#description' => t('URL path of Block Title.'),
    );
    $form['settings']['block_titlelink']['display_link'] = array(
      '#type' => 'checkbox',
      '#title' => t('Display Link'),
      '#description' => t('Select this option if title should render as a link. If deselected, the title path value is stored within the block object as $block->title_link but is not rendered. This is useful if you wish to use the link elsewhere in the block template (ex: as an icon).'),
      '#default_value' => $display_link,
    );
    //Assign weight to block title so it appears above link
    if (!isset($form['block_settings']['#weight'])) {
      $form['block_settings']['#weight'] = -1;
    }
    $form['#validate'][] = 'block_titlelink_form_validate';
    $form['#submit'][] = 'block_titlelink_form_submit';
  }
}

/**
 * Implementation of hook_validate()
*/
function block_titlelink_form_validate(&$elements, &$form_state, $form_id = NULL) {
  $title_path= trim($form_state['values']['title_link']);
  if(!empty($title_link) && !valid_url($title_link) && !valid_url($title_link,TRUE)) {
    form_set_error('title_link', t('The title path appears to contain an invalid URL.'));
  }
}

/**
 * Implementation of hook_submit()
*/
function block_titlelink_form_submit($form, &$form_state) {
	$block = new stdClass();
  $block->module = $form['module']['#value'];
  $block->delta = $form['delta']['#value'];
	$url = trim($form_state['values']['title_link']);
	$data = array(
  	'url' => $url,
		'display' => $form_state['values']['display_link'],
	);
  if(empty($url)) {
    _block_titlelink_delete_data($block);
  }
  else {
    _block_titlelink_save_data($block, $data);
  }
}

/**
 * Implementation of hook_preprocess_block
*/
function block_titlelink_preprocess_block(&$vars, $hook) {
  if ($hook == 'block') {
		$data = _block_titlelink_get_data($vars['block']);
		if($data) {
			$vars['block']->title_link = (isset($data['url'])) ? trim($data['url']) : NULL;
      $display = (isset($data['display'])) ? $data['display'] : TRUE;
			if (!empty($vars['block']->title_link) && $display) {
				$vars['block']->subject = l($vars['block']->subject, $vars['block']->title_link, array('attributes' => array('class' => 'block-title-link'), 'html'=>'true'));
			}
		}
  }
}

/**
 * Function to return a title link of a block
 * @param object $block - Block to search by
 * @return string Title Link
*/
function _block_titlelink_get_link($block) {
  if (!isset($block->module) && !isset($block->delta)) {
    return FALSE;
  }
  $varname = BLOCK_TITLELINK_VARIABLE_PREFIX . $block->module .'_'. $block->delta;
  $data = variable_get($varname, NULL);
	if(!empty($data['url'])) {
		return $data['url'];
	}
	else {
		return FALSE;
	}
}

/**
 * Function to return the data associated with a block_titlelink
 * @param object $block - Block to search by
 * @return array containing display_link and title_link variable.
 *
*/
function _block_titlelink_get_data($block) {
  if (!isset($block->module) && !isset($block->delta)) {
    return FALSE;
  }
	$varname = BLOCK_TITLELINK_VARIABLE_PREFIX . $block->module .'_'. $block->delta;
  $result = variable_get($varname, NULL);
  //Older versions of this module stored variable as string, return as array
  if(is_string($result)) {
    return array('url' => $result, 'display' => TRUE);
  }
  elseif(is_array($result)) {
    return $result;
  }
  else {
    return FALSE;
  }
}

/**
 * Function to save titlelink data
 * @param object - Block object
 * @param array - Array containing data
 * $data['url'] - String, link to save
 * $data['display'] - Boolean, display title as link
*/
function _block_titlelink_save_data($block, $data) {
	if (!isset($block->module) && !isset($block->delta)) {
    return FALSE;
  }
  $varname = BLOCK_TITLELINK_VARIABLE_PREFIX . $block->module .'_'. $block->delta;
	variable_set($varname, $data);
}

/**
 * Function to delete block data
 * @param object - Block object
*/
function _block_titlelink_delete_data($block) {
  if (!isset($block->module) && !isset($block->delta)) {
    return FALSE;
  }
  $varname = BLOCK_TITLELINK_VARIABLE_PREFIX . $block->module .'_'. $block->delta;
  variable_del($varname);
}
